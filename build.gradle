// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    //compile 'com.google.guava:guava:21.0', files('lib/opencv-331.jar', 'lib/libopencv_java331.so')

    // Use JUnit test framework
    // testCompile 'junit:junit:4.12'
}


task cmakeOpencv(group: "thirdparty") {
    doLast {
        new File("thirdparty/opencv/build").mkdirs()
        ext.installPath = new File("lib/thirdparty/opencv").getAbsolutePath()
        exec {
            workingDir "thirdparty/opencv/build"
            commandLine 'cmake',
                    '-D', 'BUILD_TESTS=OFF',
                    '-D', 'BUILD_PERF_TESTS=OFF',
                    '-D', 'BUILD_opencv_python2=OFF',
                    '-D', 'BUILD_opencv_python3=OFF',
                    '-D', 'BUILD_opencv_stitching=OFF',
                    '-D', 'BUILD_opencv_videostab=OFF',
                    '-D', "CMAKE_INSTALL_PREFIX=${installPath}",
                    '..'
        }
        copy {
            from "/thirdparty/opencv/build/lib/libopencv_java331.so"
            into "/lib/opencv"
        }
    }

    //TODO Do we need superres module? And modules under windows
}

task compileOpencv(group: "thirdparty", dependsOn: "cmakeOpencv") {
    doLast {
        println "Building Opencv with "+buildCores+" Cores"
        exec {
            workingDir = "thirdparty/opencv/build"
            commandLine 'make', '-j'+buildCores
        }
        println "Copying files to lib"
        copy {
            from "thirdparty/opencv/build/lib/libopencv_java331.so"
            into "lib/opencv/"
        }
        copy {
            from "thirdparty/opencv/build/bin/opencv-331.jar"
            into "lib/opencv/"
        }
    }
}
